// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role?    @default(USER)
  resetToken String?
  resetTokenExpiry DateTime?
  account    account?
  cars  car[]
}

enum Role {
  USER
  ADMIN
  MANAGER
}

model account {
  acc_id      Int      @id @default(autoincrement())
  profile_image String
  first_name  String
  last_name   String
  phone_number String @unique
  user        user  @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model car {
  carID                Int             @id @default(autoincrement())
  onwerName            String
  manufacture          String
  registration_num     Int
  features            String
  no_of_seats          Int
  fuel_Type            FuelType        @default(ELECTRIC)
  color                String
  Total_km             Float
  Car_Images           car_image[]
  bluebook_img         bluebook_image[]
  insurance_img        insurance_image[]
  pricing_per_hour     Int
  pricing_per_four_hour Int
  pricing_per_eight_hour Int
  pricing_per_day      Int
  isBooked             Boolean         @default(false)
  isVerified           Boolean         @default(false)
  user                 user           @relation(fields: [user_id], references: [id])
location         location @relation(fields: [location_id], references:[location_id])
location_id    Int
category category @relation(fields: [category_id], references:[category_id])
category_id Int
  user_id  Int

  user_role            String
}


model category{
  category_id Int @id @default(autoincrement())
  category_name String
  category_image String
  car car[]
}

model location {
  location_id Int @id @default(autoincrement())
  location_name String
  location_image String
  car car[]
}

model car_image {
  car_image_id Int @id @default(autoincrement())
  car_image String
  car_id Int
  car car @relation(fields: [car_id], references: [carID])
}


model bluebook_image {
  bluebook_image_id Int @id @default(autoincrement())
  bluebook_image String
  car_id Int
  car car @relation(fields: [car_id], references: [carID])
}

model insurance_image {
  insurance_image_id Int @id @default(autoincrement())
  insurance_image String
  car_id Int
  car car @relation(fields: [car_id], references: [carID])
}
enum FuelType {
  DISEL
  GAS
  ELECTRIC
}

model Booking{

}

